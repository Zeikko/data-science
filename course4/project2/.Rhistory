plot(as.numeric(as.character(data$Sub_metering_1)),  xaxt='n', xlab="", ylab="Global Active Power (kilowatts)", type="l")
par(new=TRUE)
plot(as.numeric(as.character(data$Sub_metering_2)), color="red",  xaxt='n', xlab="", ylab="Global Active Power (kilowatts)", type="l")
plot(as.numeric(as.character(data$Sub_metering_3)), color="blue",  xaxt='n', xlab="", ylab="Global Active Power (kilowatts)", type="l")
plot(as.numeric(as.character(data$Sub_metering_1)),  xaxt='n', xlab="", ylab="Global Active Power (kilowatts)", type="l")
par(new=TRUE)
plot(as.numeric(as.character(data$Sub_metering_2)), col="red",  xaxt='n', xlab="", ylab="Global Active Power (kilowatts)", type="l")
plot(as.numeric(as.character(data$Sub_metering_3)), col="blue",  xaxt='n', xlab="", ylab="Global Active Power (kilowatts)", type="l")
plot(as.numeric(as.character(data$Sub_metering_1)),  xaxt='n', xlab="", ylab="Global Active Power (kilowatts)", type="l")
plot(as.numeric(as.character(data$Sub_metering_2)), col="red",  xaxt='n', xlab="", ylab="Global Active Power (kilowatts)", type="l")
plot(as.numeric(as.character(data$Sub_metering_3)), col="blue",  xaxt='n', xlab="", ylab="Global Active Power (kilowatts)", type="l")
?par
par(new=TRUE)
plot(as.numeric(as.character(data$Sub_metering_2)), col="red",  xaxt='n', xlab="", ylab="Global Active Power (kilowatts)", type="l")
plot(as.numeric(as.character(data$Sub_metering_1)),  xaxt='n', xlab="", ylab="Global Active Power (kilowatts)", type="l")
par(new=TRUE)
plot(as.numeric(as.character(data$Sub_metering_2)), col="red",  xaxt='n', xlab="", ylab="Global Active Power (kilowatts)", type="l")
par(new=TRUE)
plot(as.numeric(as.character(data$Sub_metering_3)), col="blue",  xaxt='n', xlab="", ylab="Global Active Power (kilowatts)", type="l")
?plot
?par
?plot
?par
plot(as.numeric(as.character(data$Sub_metering_1)),  xaxt='n', xlab="", ylab="Energy sub metering", type="l")
plot(as.numeric(as.character(data$Sub_metering_1)),  xaxt='n', xlab="", ylab="Energy sub metering", type="l")
par(new=TRUE)
plot(as.numeric(as.character(data$Sub_metering_2)), axes=F,xlab="",ylab="", col="red",  xaxt='n', xlab="", type="l")
par(new=TRUE)
plot(as.numeric(as.character(data$Sub_metering_3)), axes=F,xlab="",ylab="", col="blue",  xaxt='n', xlab="", type="l")
plot(as.numeric(as.character(data$Sub_metering_1)),  xaxt='n', xlab="", ylab="Energy sub metering", type="l")
par(new=TRUE)
plot(as.numeric(as.character(data$Sub_metering_2)), axes=F, ylab="", col="red",  xaxt='n', xlab="", type="l")
par(new=TRUE)
plot(as.numeric(as.character(data$Sub_metering_3)), axes=F, ylab="", col="blue",  xaxt='n', xlab="", type="l")
plot(as.numeric(as.character(data$Sub_metering_1)),  xaxt='n', xlab="", ylab="Energy sub metering", type="l")
par(new=TRUE)
plot(as.numeric(as.character(data$Sub_metering_2)), ylim=c(0, 30), col="red",  xaxt='n', xlab="", type="l")
par(new=TRUE)
plot(as.numeric(as.character(data$Sub_metering_3)), ylim=c(0, 30), col="blue",  xaxt='n', xlab="", type="l")
plot(as.numeric(as.character(data$Sub_metering_1)), ylim=c(0, 30),  xaxt='n', xlab="", ylab="Energy sub metering", type="l")
par(new=TRUE)
plot(as.numeric(as.character(data$Sub_metering_2)), ylim=c(0, 30), col="red",  xaxt='n', xlab="", type="l")
par(new=TRUE)
plot(as.numeric(as.character(data$Sub_metering_3)), ylim=c(0, 30), col="blue",  xaxt='n', xlab="", type="l")
plot(as.numeric(as.character(data$Sub_metering_1)), ylim=c(0, 40),  xaxt='n', xlab="", ylab="Energy sub metering", type="l")
par(new=TRUE)
plot(as.numeric(as.character(data$Sub_metering_2)), ylim=c(0, 40), col="red",  xaxt='n', xlab="", type="l")
par(new=TRUE)
plot(as.numeric(as.character(data$Sub_metering_3)), ylim=c(0, 40), col="blue",  xaxt='n', xlab="", type="l")
plot(as.numeric(as.character(data$Sub_metering_1)), ylim=c(0, 40),  xaxt='n', xlab="", ylab="Energy sub metering", type="l")
par(new=TRUE)
plot(as.numeric(as.character(data$Sub_metering_2)), ylim=c(0, 40), col="red",  xaxt='n', ylab="" xlab="", type="l")
par(new=TRUE)
plot(as.numeric(as.character(data$Sub_metering_3)), ylim=c(0, 40), col="blue",  xaxt='n', ylab="" xlab="", type="l")
plot(as.numeric(as.character(data$Sub_metering_1)), ylim=c(0, 40),  xaxt='n', xlab="", ylab="Energy sub metering", type="l")
par(new=TRUE)
plot(as.numeric(as.character(data$Sub_metering_2)), ylim=c(0, 40), col="red",  xaxt='n', ylab="", xlab="", type="l")
par(new=TRUE)
plot(as.numeric(as.character(data$Sub_metering_3)), ylim=c(0, 40), col="blue",  xaxt='n', ylab="", xlab="", type="l")
plot(as.numeric(as.character(data$Sub_metering_1)), ylim=c(0, 38),  xaxt='n', xlab="", ylab="Energy sub metering", type="l")
par(new=TRUE)
plot(as.numeric(as.character(data$Sub_metering_2)), ylim=c(0, 38), col="red",  xaxt='n', ylab="", xlab="", type="l")
par(new=TRUE)
plot(as.numeric(as.character(data$Sub_metering_3)), ylim=c(0, 38), col="blue",  xaxt='n', ylab="", xlab="", type="l")
csv <- read.csv("household_power_consumption.txt", sep=";")
#Converts dates to date objects
csv$Date <- as.Date(csv$Date, format="%d/%m/%Y")
#Filter data by date
data <- filter(csv, Date >= as.Date('2007-02-01'))
data <- filter(data, Date <= as.Date('2007-02-02'))
#Open plotting window on a linux machine
x11()
#Create histogram
plot(as.numeric(as.character(data$Sub_metering_1)), ylim=c(0, 38),  xaxt='n', xlab="", ylab="Energy sub metering", type="l")
par(new=TRUE)
plot(as.numeric(as.character(data$Sub_metering_2)), ylim=c(0, 38), col="red",  xaxt='n', ylab="", xlab="", type="l")
par(new=TRUE)
plot(as.numeric(as.character(data$Sub_metering_3)), ylim=c(0, 38), col="blue",  xaxt='n', ylab="", xlab="", type="l")
axis(1, at=c(1, nrow(data)/2, nrow(data)), labels=c("Thu", "Fri", "Sat"))
#Save histogram to png
dev.copy(png, file="plot3.png")
dev.off()
x11()
#Create histogram
plot(as.numeric(as.character(data$Sub_metering_1)), ylim=c(0, 38),  xaxt='n', xlab="", ylab="Energy sub metering", type="l")
par(new=TRUE)
plot(as.numeric(as.character(data$Sub_metering_2)), ylim=c(0, 38), col="red",  xaxt='n', ylab="", xlab="", type="l")
par(new=TRUE)
plot(as.numeric(as.character(data$Sub_metering_3)), ylim=c(0, 38), col="blue",  xaxt='n', ylab="", xlab="", type="l")
?legend
legend("topright")
legend("topright", col=c("black", "red", "blue", legend=c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3")))
legend("topright", col=c("black", "red", "blue"), legend=c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"))
legend("topright", pch=4, col=c("black", "red", "blue"), legend=c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"))
legend("topright", pch=5, col=c("black", "red", "blue"), legend=c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"))
legend("topright", pch=6, col=c("black", "red", "blue"), legend=c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"))
plot(as.numeric(as.character(data$Sub_metering_1)), ylim=c(0, 38),  xaxt='n', xlab="", ylab="Energy sub metering", type="l")
legend("topright", pch=6, col=c("black", "red", "blue"), legend=c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"))
plot(as.numeric(as.character(data$Sub_metering_1)), ylim=c(0, 38),  xaxt='n', xlab="", ylab="Energy sub metering", type="l")
legend("topright", pch=7, col=c("black", "red", "blue"), legend=c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"))
plot(as.numeric(as.character(data$Sub_metering_1)), ylim=c(0, 38),  xaxt='n', xlab="", ylab="Energy sub metering", type="l")
legend("topright", pch=3, col=c("black", "red", "blue"), legend=c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"))
plot(as.numeric(as.character(data$Sub_metering_1)), ylim=c(0, 38),  xaxt='n', xlab="", ylab="Energy sub metering", type="l")
legend("topright", pch=8, col=c("black", "red", "blue"), legend=c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"))
plot(as.numeric(as.character(data$Sub_metering_1)), ylim=c(0, 38),  xaxt='n', xlab="", ylab="Energy sub metering", type="l")
legend("topright", pch="-", col=c("black", "red", "blue"), legend=c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"))
plot(as.numeric(as.character(data$Sub_metering_1)), ylim=c(0, 38),  xaxt='n', xlab="", ylab="Energy sub metering", type="l")
legend("topright", pch="----", col=c("black", "red", "blue"), legend=c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"))
plot(as.numeric(as.character(data$Sub_metering_1)), ylim=c(0, 38),  xaxt='n', xlab="", ylab="Energy sub metering", type="l")
legend("topright", pch="----", col=c("black", "red", "blue"), legend=c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"))
legend("topright", pch="_", col=c("black", "red", "blue"), legend=c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"))
plot(as.numeric(as.character(data$Sub_metering_1)), ylim=c(0, 38),  xaxt='n', xlab="", ylab="Energy sub metering", type="l")
legend("topright", pch="_", col=c("black", "red", "blue"), legend=c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"))
plot(as.numeric(as.character(data$Sub_metering_1)), ylim=c(0, 38),  xaxt='n', xlab="", ylab="Energy sub metering", type="l")
legend("topright", pch="__", col=c("black", "red", "blue"), legend=c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"))
data <- filter(csv, Date >= as.Date('2007-02-01'))
data <- filter(data, Date <= as.Date('2007-02-02'))
#Open plotting window on a linux machine
x11()
#Create histogram
plot(as.numeric(as.character(data$Sub_metering_1)), ylim=c(0, 38),  xaxt='n', xlab="", ylab="Energy sub metering", type="l")
par(new=TRUE)
plot(as.numeric(as.character(data$Sub_metering_2)), ylim=c(0, 38), col="red",  xaxt='n', ylab="", xlab="", type="l")
par(new=TRUE)
plot(as.numeric(as.character(data$Sub_metering_3)), ylim=c(0, 38), col="blue",  xaxt='n', ylab="", xlab="", type="l")
axis(1, at=c(1, nrow(data)/2, nrow(data)), labels=c("Thu", "Fri", "Sat"))
legend("topright", pch=4, col=c("black", "red", "blue"), legend=c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"))
#Save histogram to png
dev.copy(png, file="plot3.png")
dev.off()
x11()
#Create histogram
plot(as.numeric(as.character(data$Sub_metering_1)), ylim=c(0, 38),  xaxt='n', xlab="", ylab="Energy sub metering", type="l")
par(new=TRUE)
plot(as.numeric(as.character(data$Sub_metering_2)), ylim=c(0, 38), col="red",  xaxt='n', ylab="", xlab="", type="l")
par(new=TRUE)
plot(as.numeric(as.character(data$Sub_metering_3)), ylim=c(0, 38), col="blue",  xaxt='n', ylab="", xlab="", type="l")
axis(1, at=c(1, nrow(data)/2, nrow(data)), labels=c("Thu", "Fri", "Sat"))
legend("topright", pch="_", col=c("black", "red", "blue"), legend=c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"))
#Save histogram to png
dev.copy(png, file="plot3.png")
dev.off()
source("load.R")
data <- load()
library(dplyr)
plot1 <- function() {
#Load data
source("load.R")
data <- load()
#Open plotting window on a linux machine (for some reason this is required for my machine)
x11()
#Create histogram
hist(as.numeric(as.character(data$Global_active_power)), main="Global Active Power", col="red", xlab="Global Active Power (kilowatts)")
#Save histogram to png
dev.copy(png, file="plot1.png")
dev.off()
}
plot1();
plot2 <- function() {
#Load data
source("load.R")
data <- load()
#Open plotting window on a linux machine (for some reason this is required for my machine)
x11()
#Create histogram
plot(as.numeric(as.character(data$Global_active_power)),  xaxt='n', xlab="", ylab="Global Active Power (kilowatts)", type="l")
axis(1, at=c(1, nrow(data)/2, nrow(data)), labels=c("Thu", "Fri", "Sat"))
#Save histogram to png
dev.copy(png, file="plot2.png")
dev.off()
}
plot2()
plot3 <- function() {
#Load data
source("load.R")
data <- load()
#Open plotting window on a linux machine (for some reason this is required for my machine)
x11()
#Create histogram
plot(as.numeric(as.character(data$Sub_metering_1)), ylim=c(0, 38),  xaxt='n', xlab="", ylab="Energy sub metering", type="l")
par(new=TRUE)
plot(as.numeric(as.character(data$Sub_metering_2)), ylim=c(0, 38), col="red",  xaxt='n', ylab="", xlab="", type="l")
par(new=TRUE)
plot(as.numeric(as.character(data$Sub_metering_3)), ylim=c(0, 38), col="blue",  xaxt='n', ylab="", xlab="", type="l")
axis(1, at=c(1, nrow(data)/2, nrow(data)), labels=c("Thu", "Fri", "Sat"))
legend("topright", pch="_", col=c("black", "red", "blue"), legend=c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"))
#Save histogram to png
dev.copy(png, file="plot3.png")
dev.off()
}
plot3()
?par
?exist
?exists
source('~/Projects/ExData_Plotting1/plot4.R')
plot4()
source('~/Projects/ExData_Plotting1/plot4.R')
plot(as.numeric(as.character(data$Voltage)),  xaxt='n', xlab="datetime", ylab="Voltage", type="l")
x11()
plot(as.numeric(as.character(data$Voltage)),  xaxt='n', xlab="datetime", ylab="Voltage", type="l")
axis(1, at=c(1, nrow(data)/2, nrow(data)), labels=c("Thu", "Fri", "Sat"))
library(dplyr)
#Read data
csv <- read.csv("household_power_consumption.txt", sep=";")
#Converts dates to date objects
csv$Date <- as.Date(csv$Date, format="%d/%m/%Y")
#Filter data by date
data <- filter(csv, Date >= as.Date('2007-02-01'))
data <- filter(data, Date <= as.Date('2007-02-02'))
#Open plotting window on a linux machine (for some reason this is required for my machine)
x11()
par(mfcol=c(2,2))
#Plot 1
plot(as.numeric(as.character(data$Global_active_power)),  xaxt='n', xlab="", ylab="Global Active Power (kilowatts)", type="l")
axis(1, at=c(1, nrow(data)/2, nrow(data)), labels=c("Thu", "Fri", "Sat"))
#Plot 2
plot(as.numeric(as.character(data$Sub_metering_1)), ylim=c(0, 38),  xaxt='n', xlab="", ylab="Energy sub metering", type="l")
par(new=TRUE)
plot(as.numeric(as.character(data$Sub_metering_2)), ylim=c(0, 38), col="red",  xaxt='n', ylab="", xlab="", type="l")
par(new=TRUE)
plot(as.numeric(as.character(data$Sub_metering_3)), ylim=c(0, 38), col="blue",  xaxt='n', ylab="", xlab="", type="l")
axis(1, at=c(1, nrow(data)/2, nrow(data)), labels=c("Thu", "Fri", "Sat"))
legend("topright", pch="_", col=c("black", "red", "blue"), legend=c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"))
#Plot 3
plot(as.numeric(as.character(data$Voltage)),  xaxt='n', xlab="datetime", ylab="Voltage", type="l")
axis(1, at=c(1, nrow(data)/2, nrow(data)), labels=c("Thu", "Fri", "Sat"))
#Plot 4
plot(as.numeric(as.character(data$Global_reactive_power)),  xaxt='n', xlab="datetime", ylab="Global_reactive_power", type="l")
axis(1, at=c(1, nrow(data)/2, nrow(data)), labels=c("Thu", "Fri", "Sat"))
#Save plot to png
dev.copy(png, file="plot4.png")
dev.off()
?legend
plot(as.numeric(as.character(data$Sub_metering_1)), ylim=c(0, 38),  xaxt='n', xlab="", ylab="Energy sub metering", type="l")
par(new=TRUE)
plot(as.numeric(as.character(data$Sub_metering_2)), ylim=c(0, 38), col="red",  xaxt='n', ylab="", xlab="", type="l")
par(new=TRUE)
plot(as.numeric(as.character(data$Sub_metering_3)), ylim=c(0, 38), col="blue",  xaxt='n', ylab="", xlab="", type="l")
axis(1, at=c(1, nrow(data)/2, nrow(data)), labels=c("Thu", "Fri", "Sat"))
legend("topright", border="white", pch="_", col=c("black", "red", "blue"), legend=c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"))
x11()
plot(as.numeric(as.character(data$Sub_metering_1)), ylim=c(0, 38),  xaxt='n', xlab="", ylab="Energy sub metering", type="l")
par(new=TRUE)
plot(as.numeric(as.character(data$Sub_metering_2)), ylim=c(0, 38), col="red",  xaxt='n', ylab="", xlab="", type="l")
par(new=TRUE)
plot(as.numeric(as.character(data$Sub_metering_3)), ylim=c(0, 38), col="blue",  xaxt='n', ylab="", xlab="", type="l")
axis(1, at=c(1, nrow(data)/2, nrow(data)), labels=c("Thu", "Fri", "Sat"))
legend("topright", border="white", pch="_", col=c("black", "red", "blue"), legend=c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"))
legend("topright", border="white", pch="_", col=c("black", "red", "blue"), legend=c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"))
plot(as.numeric(as.character(data$Sub_metering_1)), ylim=c(0, 38),  xaxt='n', xlab="", ylab="Energy sub metering", type="l")
par(new=TRUE)
plot(as.numeric(as.character(data$Sub_metering_2)), ylim=c(0, 38), col="red",  xaxt='n', ylab="", xlab="", type="l")
par(new=TRUE)
plot(as.numeric(as.character(data$Sub_metering_3)), ylim=c(0, 38), col="blue",  xaxt='n', ylab="", xlab="", type="l")
axis(1, at=c(1, nrow(data)/2, nrow(data)), labels=c("Thu", "Fri", "Sat"))
legend("topright", fill="white", border="white", pch="_", col=c("black", "red", "blue"), legend=c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"))
plot(as.numeric(as.character(data$Sub_metering_1)), ylim=c(0, 38),  xaxt='n', xlab="", ylab="Energy sub metering", type="l")
par(new=TRUE)
plot(as.numeric(as.character(data$Sub_metering_2)), ylim=c(0, 38), col="red",  xaxt='n', ylab="", xlab="", type="l")
par(new=TRUE)
plot(as.numeric(as.character(data$Sub_metering_3)), ylim=c(0, 38), col="blue",  xaxt='n', ylab="", xlab="", type="l")
axis(1, at=c(1, nrow(data)/2, nrow(data)), labels=c("Thu", "Fri", "Sat"))
legend("topright", bty="n" fill="white", border="white", pch="_", col=c("black", "red", "blue"), legend=c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"))
plot(as.numeric(as.character(data$Sub_metering_1)), ylim=c(0, 38),  xaxt='n', xlab="", ylab="Energy sub metering", type="l")
par(new=TRUE)
plot(as.numeric(as.character(data$Sub_metering_2)), ylim=c(0, 38), col="red",  xaxt='n', ylab="", xlab="", type="l")
par(new=TRUE)
plot(as.numeric(as.character(data$Sub_metering_3)), ylim=c(0, 38), col="blue",  xaxt='n', ylab="", xlab="", type="l")
axis(1, at=c(1, nrow(data)/2, nrow(data)), labels=c("Thu", "Fri", "Sat"))
legend("topright", bty="n", pch="_", col=c("black", "red", "blue"), legend=c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"))
par(mfcol=c(2,2))
#Plot 1
plot(as.numeric(as.character(data$Global_active_power)),  xaxt='n', xlab="", ylab="Global Active Power", type="l")
axis(1, at=c(1, nrow(data)/2, nrow(data)), labels=c("Thu", "Fri", "Sat"))
#Plot 2
plot(as.numeric(as.character(data$Sub_metering_1)), ylim=c(0, 38),  xaxt='n', xlab="", ylab="Energy sub metering", type="l")
par(new=TRUE)
plot(as.numeric(as.character(data$Sub_metering_2)), ylim=c(0, 38), col="red",  xaxt='n', ylab="", xlab="", type="l")
par(new=TRUE)
plot(as.numeric(as.character(data$Sub_metering_3)), ylim=c(0, 38), col="blue",  xaxt='n', ylab="", xlab="", type="l")
axis(1, at=c(1, nrow(data)/2, nrow(data)), labels=c("Thu", "Fri", "Sat"))
legend("topright", bty="n", pch="_", col=c("black", "red", "blue"), legend=c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"))
#Plot 3
plot(as.numeric(as.character(data$Voltage)),  xaxt='n', xlab="datetime", ylab="Voltage", type="l")
axis(1, at=c(1, nrow(data)/2, nrow(data)), labels=c("Thu", "Fri", "Sat"))
#Plot 4
plot(as.numeric(as.character(data$Global_reactive_power)),  xaxt='n', xlab="datetime", ylab="Global_reactive_power", type="l")
axis(1, at=c(1, nrow(data)/2, nrow(data)), labels=c("Thu", "Fri", "Sat"))
library(dplyr)
#Read data
csv <- read.csv("household_power_consumption.txt", sep=";")
#Converts dates to date objects
csv$Date <- as.Date(csv$Date, format="%d/%m/%Y")
#Filter data by date
data <- filter(csv, Date >= as.Date('2007-02-01'))
data <- filter(data, Date <= as.Date('2007-02-02'))
#Open plotting window on a linux machine (for some reason this is required for my machine)
x11()
par(mfcol=c(2,2))
#Plot 1
plot(as.numeric(as.character(data$Global_active_power)),  xaxt='n', xlab="", ylab="Global Active Power", type="l")
axis(1, at=c(1, nrow(data)/2, nrow(data)), labels=c("Thu", "Fri", "Sat"))
#Plot 2
plot(as.numeric(as.character(data$Sub_metering_1)), ylim=c(0, 38),  xaxt='n', xlab="", ylab="Energy sub metering", type="l")
par(new=TRUE)
plot(as.numeric(as.character(data$Sub_metering_2)), ylim=c(0, 38), col="red",  xaxt='n', ylab="", xlab="", type="l")
par(new=TRUE)
plot(as.numeric(as.character(data$Sub_metering_3)), ylim=c(0, 38), col="blue",  xaxt='n', ylab="", xlab="", type="l")
axis(1, at=c(1, nrow(data)/2, nrow(data)), labels=c("Thu", "Fri", "Sat"))
legend("topright", bty="n", pch="_", col=c("black", "red", "blue"), legend=c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"))
#Plot 3
plot(as.numeric(as.character(data$Voltage)),  xaxt='n', xlab="datetime", ylab="Voltage", type="l")
axis(1, at=c(1, nrow(data)/2, nrow(data)), labels=c("Thu", "Fri", "Sat"))
#Plot 4
plot(as.numeric(as.character(data$Global_reactive_power)),  xaxt='n', xlab="datetime", ylab="Global_reactive_power", type="l")
axis(1, at=c(1, nrow(data)/2, nrow(data)), labels=c("Thu", "Fri", "Sat"))
#Save plot to png
dev.copy(png, file="plot4.png")
dev.off()
library(dplyr)
#Read data
csv <- read.csv("household_power_consumption.txt", sep=";")
#Converts dates to date objects
csv$Date <- as.Date(csv$Date, format="%d/%m/%Y")
#Filter data by date
data <- filter(csv, Date >= as.Date('2007-02-01'))
data <- filter(data, Date <= as.Date('2007-02-02'))
#Open plotting window on a linux machine (for some reason this is required for my machine)
x11()
#Create plot
plot(as.numeric(as.character(data$Sub_metering_1)), ylim=c(0, 38),  xaxt='n', xlab="", ylab="Energy sub metering", type="l")
par(new=TRUE)
plot(as.numeric(as.character(data$Sub_metering_2)), ylim=c(0, 38), col="red",  xaxt='n', ylab="", xlab="", type="l")
par(new=TRUE)
plot(as.numeric(as.character(data$Sub_metering_3)), ylim=c(0, 38), col="blue",  xaxt='n', ylab="", xlab="", type="l")
axis(1, at=c(1, nrow(data)/2, nrow(data)), labels=c("Thu", "Fri", "Sat"))
legend("topright", pch="_", col=c("black", "red", "blue"), legend=c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"))
#Save plot to png
dev.copy(png, file="plot3.png")
dev.off()
library(dplyr)
#Read data
csv <- read.csv("household_power_consumption.txt", sep=";")
#Converts dates to date objects
csv$Date <- as.Date(csv$Date, format="%d/%m/%Y")
#Filter data by date
data <- filter(csv, Date >= as.Date('2007-02-01'))
data <- filter(data, Date <= as.Date('2007-02-02'))
#Open plotting window on a linux machine (for some reason this is required for my machine)
x11()
#Create plot
plot(as.numeric(as.character(data$Global_active_power)),  xaxt='n', xlab="", ylab="Global Active Power (kilowatts)", type="l")
axis(1, at=c(1, nrow(data)/2, nrow(data)), labels=c("Thu", "Fri", "Sat"))
#Save plot to png
dev.copy(png, file="plot2.png")
dev.off()
library(dplyr)
#Read data
csv <- read.csv("household_power_consumption.txt", sep=";")
#Converts dates to date objects
csv$Date <- as.Date(csv$Date, format="%d/%m/%Y")
#Filter data by date
data <- filter(csv, Date >= as.Date('2007-02-01'))
data <- filter(data, Date <= as.Date('2007-02-02'))
#Open plotting window on a linux machine (for some reason this is required for my machine)
x11()
#Create histogram
hist(as.numeric(as.character(data$Global_active_power)), main="Global Active Power", col="red", xlab="Global Active Power (kilowatts)")
#Save histogram to png
dev.copy(png, file="plot1.png")
dev.off()
?png
source('~/.active-rstudio-document')
getwd()
source('~/.active-rstudio-document')
source('~/Projects/ExData_Plotting1/plot2.R')
source('~/Projects/ExData_Plotting1/plot3.R')
source('~/Projects/ExData_Plotting1/plot4.R')
source('~/Projects/ExData_Plotting1/plot4.R')
library(nlme)
library(lattice)
xyplot(weight ~ Time | Diet, BodyWeight)
x11()
xyplot(weight ~ Time | Diet, BodyWeight)
library(datasets)
data(airquality)
p <- xyplot(Ozone ~ Wind | factor(Month), data = airquality)
x1()
x11()
p <- xyplot(Ozone ~ Wind | factor(Month), data = airquality)
factor(Month)
data
airquality
head(airquality)
?trellis.par.set
?par
?splom
?print.trellis
library(datasets)
data(airquality)
qplot(Wind, Ozone, data = airquality, geom = "smooth")
library(ggplot)
install.packages(ggplot)
install.packages("ggplot")
install.packages("ggplot2")
x11()
qplot(Wind, Ozone, data = airquality, facets = . ~ factor(Month))
library(ggplot2)
qplot(Wind, Ozone, data = airquality, facets = . ~ factor(Month))
qplot(Wind, Ozone, data = airquality, geom = "smooth")
qplot(Wind, Ozone, data = airquality, facets = . ~ factor(Month))
airquality = transform(airquality, Month = factor(Month))
qplot(Wind, Ozone, data = airquality, facets = . ~ Month)
qplot(Wind, Ozone, data = airquality)
?lines
?points
?ilines
?llines
?text
?llines
?xyplot
?llines
?xyplot
qplot(votes, rating, data = movies)
qplot(votes, rating, data = movies, smooth = "loess")
qplot(votes, rating, data = movies) + geom_smooth()
qplot(votes, rating, data = movies, panel = panel.loess)
qplot(votes, rating, data = movies) + geom_smooth()
qplot(votes, rating, data = movies) + stats_smooth("loess")
getwd()
setwd("/home/zeikko/Projects/data-science/course4")
source('~/Projects/data-science/course4/project2/plot1.R')
getwd()
setwd("/home/zeikko/Projects/data-science/course4/project2")
source('~/Projects/data-science/course4/project2/plot1.R')
source('~/Projects/data-science/course4/project2/plot1.R')
source('~/Projects/data-science/course4/project2/plot1.R')
head(SCC)
head(NEI)
?group_by
years <- group_by(NEI, year)
head(years)
years <- group_by(NEI, year, add=TRUE)
head(years)
?summerise
?summarise
?group_by
?sum
summarise(years, sum(Emissions))
years <- group_by(NEI, year)
summarise(years, sum(Emissions))
?plot
x11()
data <- summarise(years, sum(Emissions))
plot(data[,1], data[,1])
data[,1]
as.character(data[,1])
plot(as.character(data[,1]), as.character(data[,1]))
as.character(data[,1])
as.numeric(as.character(data[,1]))
data[,1]
as.character(data[,1])
data[,1]
data[1]
as.character(data[1])
as.numeric(data[1])
data[1]
plot(data[1], data[1])
plot(data[1], data[2])
data[2]
plot(data[,1], data[,2])
data[1,]
data[,1]
data[1,1]
data[1]
data
typeof(data[,1])
class(data[,1])
unlist(data[,1])
data$year
plot(data$year, data$sum(Emissions))
data
data$sum(Emissions)
data$'sum(Emissions)'
plot(data$year, data$'sum(Emissions)')
plot(data$year, data$'sum(Emissions)', xlab="Year", ylab="Total Emissions")
source('~/Projects/data-science/course4/project2/plot1.R')
plot(data$year, data$'sum(Emissions)', xlab="Year", ylab="Total Emissions", xlim=c(1999,2001,2003,2005,2007,2009))
plot(data$year, data$'sum(Emissions)', xlab="Year", ylab="Total Emissions")
plot(data$year, data$'sum(Emissions)', xlab="Year", ylab="Total Emissions", ylim=c(3464206,7332967))
?axis
axis(1, 1:4)
axis(2, 1:4, 1:4)
?abline
abline(h=data$'sum(Emissions', v=data$year)
plot(data$year, data$'sum(Emissions)', xlab="Year", ylab="Total Emissions", ylim=c(3464206,7332967))
plot(data$year, data$'sum(Emissions)', xlab="Year", ylab="Total Emissions"
)
plot(data$year, data$'sum(Emissions)', xlab="Year", ylab="Total Emissions")
abline(lm(y ~ x))
abline(lm(data$'sum(Emissions)' ~ data$year))
source('~/Projects/data-science/course4/project2/plot1.R')
?filter
source('~/Projects/data-science/course4/project2/plot2.R')
source('~/Projects/data-science/course4/project2/plot1.R')
source('~/Projects/data-science/course4/project2/plot2.R')
?qplot
?summarise
summarise(years, sum(Emissions))
years <- group_by(filtered, year)
years <- group_by(filtered, year, type)
summarise(years, sum(Emissions))
